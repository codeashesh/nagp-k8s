apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: nagp-k8s
spec:
  replicas: 3
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
      - name: user-service
        image: gcr.io/kubernetes-424218/user-service:v1
        ports:
        - containerPort: 8080
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: user-config
              key: DB_HOST
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: user-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: user-config
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: user-secret
              key: DB_PASSWORD
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: user-config
              key: DB_PORT
        - name: USER_PORT
          valueFrom:
            configMapKeyRef:
              name: user-config
              key: USER_PORT
        livenessProbe:
          httpGet:
            path: /api/user/health
            port: 8080
            httpHeaders:
            - name: source
              value: k8s
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 3
          failureThreshold: 9
        readinessProbe:
          httpGet:
            path: /api/user/health
            port: 8080
            httpHeaders:
            - name: source
              value: k8s
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 3
          failureThreshold: 9
        resources:
          requests:
            cpu: "50m"
            memory: "100Mi"
          limits:
            cpu: "100m"
            memory: "200Mi"

---

apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: nagp-k8s
spec:
  type: LoadBalancer
  selector:
    app: user-service
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
